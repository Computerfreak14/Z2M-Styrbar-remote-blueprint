blueprint:
  name: Ikea Styrbar Remote
  description: Control your lights with the IKEA STYRBAR remote. You can also set actions for the left and right button.
  domain: automation
  input:
    remote:
      name: Remote
      description: IKEA remote to use
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
    target_light:
      name: Lights
      description: The lights you want to control with the remote
      selector:
        target:
          entity:
            domain: light
    button_left:
      name: Left button
      description: Action to run on left button press
      default: []
      selector:
        action: {}
    button_right:
      name: right button
      description: Action to run on right button press
      default: []
      selector:
        action: {}
    brightness:
      name: Brightness
      description: The brightness you want your lights to be when turning them on
      default: 100
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: '%'
    force_brightness:
      name: Force Brightness
      description: Force the above set brightness when turning on the lamps?
      default: false
      selector:
        boolean: {}
      
  source_url: https://raw.githubusercontent.com/Computerfreak14/Z2M-Styrbar-remote-blueprint/experimental-ZHA/Z2M-IKEA-STYRBAR-remote.yaml
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input 'remote'
action:
  - variables:
      command: '{{ trigger.event.data.command }}'
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ command == ''on'' }}'
        sequence:
          - choose:
            - conditions: '{{ force_brightness }}'
              sequence:
              - service: light.turn_on
                target: !input 'target_light'
                data:
                  transition: 1
                  brightness_pct: !input 'brightness'
                  color_name: white
            default:
            - service: light.turn_on
              target: !input 'target_light'
              data:
                transition: 1
                color_name: white
      - conditions:
          - condition: template
            value_template: '{{ command == ''off'' }}'
        sequence:
          - service: light.turn_off
            target: !input 'target_light'
      - conditions:
          - condition: template
            value_template: '{{ command == ''brightness_move_down'' }}'
        sequence:
          - repeat:
              until:
                - condition: state
                  entity_id: !input 'remote'
                  state: brightness_stop
                  attribute: action
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: -10
                    transition: 1
                  target: !input 'target_light'
                - delay: '1'
      - conditions:
          - condition: template
            value_template: '{{ command == ''brightness_move_up'' }}'
        sequence:
          - repeat:
              until:
                - condition: state
                  entity_id: !input 'remote'
                  state: brightness_stop
                  attribute: action
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: +10
                    transition: 1
                  target: !input 'target_light'
                - delay: '1'
      - conditions:
          - '{{ command == ''arrow_left_click'' }}'
        sequence: !input 'button_left'
      - conditions:
          - '{{ command == ''arrow_right_click'' }}'
        sequence: !input 'button_right'
mode: restart
max_exceeded: silent
